// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: LogProfilesClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	insights "github.com/Azure/azure-sdk-for-go/services/preview/monitor/mgmt/2019-11-01-preview/insights"
	gomock "github.com/golang/mock/gomock"
)

// MockLogProfilesClient is a mock of LogProfilesClient interface.
type MockLogProfilesClient struct {
	ctrl     *gomock.Controller
	recorder *MockLogProfilesClientMockRecorder
}

// MockLogProfilesClientMockRecorder is the mock recorder for MockLogProfilesClient.
type MockLogProfilesClientMockRecorder struct {
	mock *MockLogProfilesClient
}

// NewMockLogProfilesClient creates a new mock instance.
func NewMockLogProfilesClient(ctrl *gomock.Controller) *MockLogProfilesClient {
	mock := &MockLogProfilesClient{ctrl: ctrl}
	mock.recorder = &MockLogProfilesClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogProfilesClient) EXPECT() *MockLogProfilesClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockLogProfilesClient) List(arg0 context.Context) (insights.LogProfileCollection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(insights.LogProfileCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockLogProfilesClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockLogProfilesClient)(nil).List), arg0)
}
