// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: SecurityContactsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	security "github.com/Azure/azure-sdk-for-go/services/preview/security/mgmt/v3.0/security"
	gomock "github.com/golang/mock/gomock"
)

// MockSecurityContactsClient is a mock of SecurityContactsClient interface.
type MockSecurityContactsClient struct {
	ctrl     *gomock.Controller
	recorder *MockSecurityContactsClientMockRecorder
}

// MockSecurityContactsClientMockRecorder is the mock recorder for MockSecurityContactsClient.
type MockSecurityContactsClientMockRecorder struct {
	mock *MockSecurityContactsClient
}

// NewMockSecurityContactsClient creates a new mock instance.
func NewMockSecurityContactsClient(ctrl *gomock.Controller) *MockSecurityContactsClient {
	mock := &MockSecurityContactsClient{ctrl: ctrl}
	mock.recorder = &MockSecurityContactsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecurityContactsClient) EXPECT() *MockSecurityContactsClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockSecurityContactsClient) List(arg0 context.Context) (security.ContactListPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(security.ContactListPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSecurityContactsClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSecurityContactsClient)(nil).List), arg0)
}
