// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-azure/client/services (interfaces: SecurityPricingsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	security "github.com/Azure/azure-sdk-for-go/services/preview/security/mgmt/v3.0/security"
	gomock "github.com/golang/mock/gomock"
)

// MockSecurityPricingsClient is a mock of SecurityPricingsClient interface.
type MockSecurityPricingsClient struct {
	ctrl     *gomock.Controller
	recorder *MockSecurityPricingsClientMockRecorder
}

// MockSecurityPricingsClientMockRecorder is the mock recorder for MockSecurityPricingsClient.
type MockSecurityPricingsClientMockRecorder struct {
	mock *MockSecurityPricingsClient
}

// NewMockSecurityPricingsClient creates a new mock instance.
func NewMockSecurityPricingsClient(ctrl *gomock.Controller) *MockSecurityPricingsClient {
	mock := &MockSecurityPricingsClient{ctrl: ctrl}
	mock.recorder = &MockSecurityPricingsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecurityPricingsClient) EXPECT() *MockSecurityPricingsClientMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockSecurityPricingsClient) List(arg0 context.Context) (security.PricingList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(security.PricingList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockSecurityPricingsClientMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockSecurityPricingsClient)(nil).List), arg0)
}
