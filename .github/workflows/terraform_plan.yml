# DONT EDIT. This file is synced from https://github.com/cloudquery/.github/.github
name: terraform_plan
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'

jobs:
  terrafrom_plan:
    # In this scenario we are not using OIDC yet because we are waiting for
    # https://github.com/hashicorp/go-azure-helpers/issues/91
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    name: Terrafrom Plan
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: ./scripts/terraform-fmt-change-only.sh
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: ./scripts/terraform-init-change-only.sh

      - name: Terraform Validate
        id: validate
        run: ./scripts/terraform-validate-change-only.sh

      - name: Terraform Plan
        id: plan
        run: ./scripts/terraform-plan-change-only.sh

      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

