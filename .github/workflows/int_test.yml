name: integration_test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  integration_test:
    if: github.repository == 'cloudquery/cq-provider-azure'
    strategy:
      matrix:
        dbversion: [ "postgres:latest" ]
        go: [ "1.16" ]
        platform: [ ubuntu-latest ] # can not run in macOS and widnowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v .

      - name: Integration Test
        run: go test -tags=integration ./...
        env:
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          CQ_NO_TELEMETRY: 1

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ failure() }}
        env:
          SLACK_CHANNEL: oss-tests
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'AZURE - E2E tests failed'
          SLACK_TITLE: AZURE - E2E tests failed
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}